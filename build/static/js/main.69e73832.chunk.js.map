{"version":3,"sources":["services/noteService.js","notes/Note.js","App.js","index.js"],"names":["baseUrl","note","getAll","axios","get","then","res","data","create","newObject","post","update","id","put","Note","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","successMessage","setSuccessMessage","invalidNote","setInvalidNote","useEffect","noteService","notesToShow","filter","important","toggleImportance","label","content","onClick","Notification","message","className","Success","Error","map","i","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","length","noteObj","date","Date","toISOString","Math","random","concat","console","log","value","onChange","target","App","ReactDOM","render","document","getElementById"],"mappings":"8QAGMA,EAAU,aAuBDC,EANF,CACXC,OAhBa,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAACC,GAAD,OAASA,EAAIC,SAejCC,OAZa,SAACC,GAEd,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAWjCI,OARa,SAACC,EAAIH,GAElB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UCyHpBO,G,MAtIF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,IAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGaJ,oBAAS,GAHtB,mBAGVK,EAHU,KAGDC,EAHC,OAIuBN,mBAAS,MAJhC,mBAIVO,EAJU,KAIIC,EAJJ,OAK2BR,mBAAS,MALpC,mBAKVS,EALU,KAKMC,EALN,OAMqBV,mBAAS,MAN9B,mBAMVW,EANU,KAMGC,EANH,KAQjBC,qBAAU,WACRC,EAAY3B,SAASG,MAAK,SAACE,GAAD,OAAUU,EAASV,QAC5C,IAEH,IAwCMuB,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAC9B,GAAD,OAAUA,EAAK+B,aAoB5DlB,EAAO,SAAC,GAAgC,IAA9Bb,EAA6B,EAA7BA,KAAMgC,EAAuB,EAAvBA,iBACdC,EAAQjC,EAAK+B,UAAY,qBAAuB,iBACtD,OACE,4BACE,+BACG/B,EAAKkC,QADR,WAEc,wBAAQC,QAASH,EAAjB,SAAoCC,UAMlDG,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EAAyB,KAE3B,qBAAKC,UAAU,QAAf,SACE,4BAAID,OAKJE,EAAU,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QACjB,OAAgB,OAAZA,EAAyB,KAE3B,qBAAKC,UAAU,UAAf,SACE,4BAAID,OAKJG,EAAQ,SAAC,GAAiB,IAAfH,EAAc,EAAdA,QACf,OAAe,MAAXA,EAAwB,KAE1B,qBAAKC,UAAU,UAAf,SACE,4BAAID,OAKV,OACE,8BACE,qCACE,uCACA,cAACD,EAAD,CAAcC,QAAShB,IACvB,cAACkB,EAAD,CAASF,QAASd,IAClB,cAACiB,EAAD,CAAOH,QAASZ,IAEhB,yBAAQU,QAAS,kBAAMf,GAAYD,IAAnC,kBAAmDA,EAAU,YAAc,SAC3E,6BACGU,EAAYY,KAAI,SAACzC,EAAM0C,GAAP,OACf,cAAC7B,EAAD,CAAcb,KAAMA,EAAMgC,iBAAkB,kBApE3B,SAACrB,GAC1B,IAAMX,EAAOe,EAAM4B,MAAK,SAACC,GAAD,OAAOA,EAAEjC,KAAOA,KAClCkC,EAAW,2BAAQ7C,GAAR,IAAc+B,WAAY/B,EAAK+B,YAEhDH,EACGlB,OAAOC,EAAIkC,GACXzC,MAAK,SAACE,GAAD,OAAUU,EAASD,EAAM0B,KAAI,SAACzC,GAAD,OAAWA,EAAKW,KAAOA,EAAKX,EAAOM,SACrEwC,OAAM,SAACC,GACNzB,EAAgB,YAAD,OAAatB,EAAKkC,QAAlB,yCAEfc,YAAW,WACT1B,EAAgB,QACf,KAEHN,EAASD,EAAMe,QAAO,SAACc,GAAD,OAAOA,EAAEjC,KAAOA,SAsDgBsC,CAAmBjD,EAAKW,MAA/D+B,QAGf,uBAAMQ,SAjHI,SAACC,GAGf,GAFAA,EAAMC,iBAEU,KAAZnC,EACFK,EAAgB,uBAChB0B,YAAW,WACT1B,EAAgB,QACf,UACE,GAAIL,EAAQoC,OAAS,EAC1B3B,EAAe,gDACfsB,YAAW,WACTtB,EAAe,QACd,SACE,CACL,IAAM4B,EAAU,CACdpB,QAASjB,EACTsC,MAAM,IAAIC,MAAOC,cACjB1B,UAAW2B,KAAKC,SAAW,GAC3BhD,GAAII,EAAMsC,OAAS,GAErBzB,EACGrB,OAAO+C,GACPlD,MAAK,SAACE,GACLU,EAASD,EAAM6C,OAAOtD,IACtBY,EAAW,IACXM,EAAkB,WAAD,OAAYP,EAAZ,yBACjB+B,YAAW,WACTxB,EAAkB,QACjB,QAEJsB,OAAM,SAACC,GACNc,QAAQC,IAAI,0BAA2Bf,EAAMV,cAkF/C,UACE,uBAAO0B,MAAO9C,EAAS+C,SA9ET,SAACb,GACrBjC,EAAWiC,EAAMc,OAAOF,UA8ElB,oDCtHKG,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCHNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.69e73832.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// const baseUrl = \"http://localhost:3001/api/notes\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst note = {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n\r\nexport default note;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport noteService from \"../services/noteService\";\r\nimport \"./note.css\";\r\n\r\nconst Note = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const [invalidNote, setInvalidNote] = useState(null);\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((data) => setNotes(data));\r\n  }, []);\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (newNote === \"\") {\r\n      setErrorMessage(\"Note can't be empty\");\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    } else if (newNote.length < 6) {\r\n      setInvalidNote(`Note content can't be less than 5 characters`);\r\n      setTimeout(() => {\r\n        setInvalidNote(null);\r\n      }, 5000);\r\n    } else {\r\n      const noteObj = {\r\n        content: newNote,\r\n        date: new Date().toISOString(),\r\n        important: Math.random() < 0.5,\r\n        id: notes.length + 1,\r\n      };\r\n      noteService\r\n        .create(noteObj)\r\n        .then((data) => {\r\n          setNotes(notes.concat(data));\r\n          setNewNote(\"\");\r\n          setSuccessMessage(`Note : \"${newNote}\" successfully added`);\r\n          setTimeout(() => {\r\n            setSuccessMessage(null);\r\n          }, 5000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error while adding note\", error.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleNewNote = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then((data) => setNotes(notes.map((note) => (note.id !== id ? note : data))))\r\n      .catch((error) => {\r\n        setErrorMessage(`the Note ${note.content} was already deleted from the server`);\r\n\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n\r\n        setNotes(notes.filter((n) => n.id !== id));\r\n      });\r\n  };\r\n\r\n  const Note = ({ note, toggleImportance }) => {\r\n    const label = note.important ? \"mark not important\" : \"mark important\";\r\n    return (\r\n      <p>\r\n        <li>\r\n          {note.content}\r\n          &nbsp;&nbsp;<button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const Notification = ({ message }) => {\r\n    if (message === null) return null;\r\n    return (\r\n      <div className=\"error\">\r\n        <p>{message}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Success = ({ message }) => {\r\n    if (message === null) return null;\r\n    return (\r\n      <div className=\"success\">\r\n        <p>{message}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Error = ({ message }) => {\r\n    if (message == null) return null;\r\n    return (\r\n      <div className=\"warning\">\r\n        <p>{message}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <h1>Notes</h1>\r\n        <Notification message={errorMessage} />\r\n        <Success message={successMessage} />\r\n        <Error message={invalidNote} />\r\n\r\n        <button onClick={() => setShowAll(!showAll)}>show {showAll ? \"important\" : \"All\"}</button>\r\n        <ul>\r\n          {notesToShow.map((note, i) => (\r\n            <Note key={i} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\r\n          ))}\r\n        </ul>\r\n        <form onSubmit={addNote}>\r\n          <input value={newNote} onChange={handleNewNote} />\r\n          <button>save</button>\r\n        </form>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Note from \"./notes/Note\";\n// import Phonebook from \"./phonebook/Phonebook\";\n\nconst App = () => {\n  return (\n    <>\n      <Note />\n      {/* <Phonebook /> */}\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}